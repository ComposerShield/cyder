name: Build Cyder

on:
  push:
    branches:
      - '**'

jobs:
  mac-15-build-xcode:
    if: true
    runs-on: macos-15
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Configure CMake (Xcode generator)
        run: cmake . -B build -G Xcode

      - name: Build
        run: cmake --build build --config Release --target Cyder_All
        
      - name: Run Unit Tests
        run: |
          cd build
          ctest -C Release --verbose
          
      - name: Install pluginval
        run: |
          brew update
          brew install pluginval
          
      - name: Add Homebrewâ€™s binaries to PATH
        run: |
          echo "$(brew --prefix)/bin" >> $GITHUB_PATH

      - name: Validate VST3 with pluginval
        run: |
          pluginval --strictness-level 10 --validate ./Cyder.vst3
          
  mac-14-build-xcode:
    if: true
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Select Xcode 15.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'

      - name: Configure CMake (Xcode generator)
        run: cmake . -B build

      - name: Build
        run: |
          cmake --build build --config Release --target Cyder_All
        
      - name: Run Unit Tests
        run: |
          cd build
          ctest -C Release --verbose
          
  mac-15-build-clang-ninja-qiti:
    if: true
    runs-on: macos-15
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install LLVM 16
        run: |
          brew install llvm@16
          echo "PATH=$(brew --prefix llvm@16)/bin:$PATH" >> $GITHUB_ENV

      # Build with Qiti instrumentation, including enabling TSan.
      # Enables additional tests not possible in regular Release builds.
      - name: Configure CMake (Xcode generator)
        run: cmake . -B build \
             -G Ninja \
             -DCMAKE_BUILD_TYPE=Debug \
             -DCMAKE_C_COMPILER=clang \
             -DCMAKE_CXX_COMPILER=clang++ \
             -DENABLE_QITI=ON

      - name: Build
        run: |
          # Must be debug on Qiti builds
          cmake --build build --config Debug --target Cyder_All
        
      - name: Run Unit Tests
        run: |
          cd build
          # Must be debug on Qiti builds
          ctest -C Debug --verbose

  windows-11-build:
    if: true
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure CMake (Visual Studio generator)
        run: cmake . -B build -G "Visual Studio 17 2022"

      - name: Build (parallel)
        run: cmake --build build --config Release --parallel 4 --target Cyder_All

      - name: Run Unit Tests
        run: |
          cd build
          ctest -C Release --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install cpplint
        run: pip3 install cpplint

      - name: Run CPPLint
        run: ./runCpplint.sh
